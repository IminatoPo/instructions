# -------- build 32bit boot loader
mkdir ~/boot32
cd ~/boot32
apt -y install git bison libopts25 libselinux1-dev autogen \
  m4 autoconf help2man libopts25-dev flex libfont-freetype-perl \
  automake autotools-dev libfreetype6-dev texinfo
git clone git://git.savannah.gnu.org/grub.git
cd grub
./autogen.sh
./configure --with-platform=efi --target=i386 --program-prefix=''
make
cd grub-core
../grub-mkimage -d . -o bootia32.efi -O i386-efi -p /boot/grub \
  ntfs hfs appleldr boot cat efi_gop efi_uga elf fat hfsplus iso9660 linux keylayouts \
  memdisk minicmd part_apple ext2 extcmd xfs xnu part_bsd part_gpt search search_fs_file \
  chain btrfs loadbios loadenv lvm minix minix2 reiserfs memrw mmap msdospart scsi loopback \
  normal configfile gzio all_video efi_gop efi_uga gfxterm gettext echo boot chain eval
# file located at ~/boot32/grub/grub-core/bootia32.efi to be copied later


# kernel build based on https://help.ubuntu.com/community/LiveCDCustomization
# -------- host section
cd ~
# Install required tools
apt -y install squashfs-tools genisoimage

# Extract ISO contents
mkdir livecdtmp
cd livecdtmp
wget http://releases.ubuntu.com/16.04.2/ubuntu-16.04.2-desktop-amd64.iso
mkdir isomnt
mount -o loop ubuntu-16.04.2-desktop-amd64.iso isomnt
mkdir extract-cd
rsync --exclude=/casper/filesystem.squashfs -a isomnt/ extract-cd
unsquashfs isomnt/casper/filesystem.squashfs
mv squashfs-root edit
umount isomnt

# save files to be restored at cleanup
cp -a edit/etc/hosts edit/etc/hosts.orig
cp -a edit/root edit/root.orig
cp -a edit/tmp edit/tmp.orig

# Setup chroot environment
mount --bind /run/ edit/run
mount --bind /dev/ edit/dev
cp /etc/hosts edit/etc/

# -------- in chroot section

chroot edit
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devpts none /dev/pts

export HOME=/root
export LC_ALL=C

# download and install packaged kernel - from http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10/
cd /tmp
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10/linux-headers-4.10.0-041000-generic_4.10.0-041000.201702191831_amd64.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10/linux-headers-4.10.0-041000_4.10.0-041000.201702191831_all.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10/linux-image-4.10.0-041000-generic_4.10.0-041000.201702191831_amd64.deb
dpkg -i *.deb

apt -y purge linux-image-4.8.0-36-generic
apt -y autoremove


# clean setup and end chroot
umount /proc
umount /sys
umount /dev/pts
exit
umount edit/run
umount edit/dev
mv edit/etc/hosts.orig edit/etc/hosts
rm -fr edit/root
mv edit/root.orig  edit/root
rm -fr edit/tmp
mv edit/tmp.orig edit/tmp

# install Broadcom 43340 config file
# file obtained on running x205ta system from /sys/firmware/efi/efivars/nvram-74b00bd9-805a-4d61-b51f-43268123d113
wget http://lopaka.github.io/files/instructions/brcmfmac43340-sdio.txt -O edit/lib/firmware/brcm/brcmfmac43340-sdio.txt

# create CD image
chmod +w extract-cd/casper/filesystem.manifest
chroot edit dpkg-query -W --showformat='${Package} ${Version}\n' > extract-cd/casper/filesystem.manifest
cp extract-cd/casper/filesystem.manifest extract-cd/casper/filesystem.manifest-desktop
sed -i '/ubiquity/d' extract-cd/casper/filesystem.manifest-desktop
sed -i '/casper/d' extract-cd/casper/filesystem.manifest-desktop

cp ~/boot32/grub/grub-core/bootia32.efi extract-cd/EFI/BOOT/
mksquashfs edit extract-cd/casper/filesystem.squashfs
echo $(du -sx --block-size=1 edit | cut -f1) > extract-cd/casper/filesystem.size

# overwrite livecd files to use new kernel and configure wireless
cp edit/boot/vmlinuz-4.10.0-041000-generic extract-cd/casper/vmlinuz.efi
mkdir initrd
cd initrd
lzma -dc -S .lz ../extract-cd/casper/initrd.lz | cpio -imvd --no-absolute-filenames
rm -fr lib/modules/4.8.0-36-generic
cp -a ../edit/lib/modules/4.10.0-041000-generic lib/modules/
rm -fr lib/firmware/4.8.0-36-generic
cp -a ../edit/lib/firmware/4.10.0-041000-generic lib/firmware/
mkdir -p lib/firmware/brcm
cp -a ../edit/lib/firmware/brcm/brcmfmac43340-sdio* lib/firmware/brcm/
find . | cpio --quiet --dereference -o -H newc | lzma -7 > ../extract-cd/casper/initrd.lz
cd ..

# Edit extract-cd/README.diskdefines if wish to change name

# create ISO
cd extract-cd
find -type f -print0 | xargs -0 md5sum | grep -v isolinux/boot.cat > md5sum.txt
mkisofs -J -l -b isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table -z -iso-level 4 -c isolinux/isolinux.cat -joliet-long -o ../ubuntu-16.04.2-desktop-amd64-custom.iso .

# write to USB
# Assuming USB flashdrive assigned to /dev/sdb
# THIS WILL DELETE ALL DATA ON /dev/sdb - make sure you know what you are doing!
sgdisk --zap-all /dev/sdb
sgdisk --new=1:0:0 --typecode=1:ef00 /dev/sdb
mkfs.vfat -F32 /dev/sdb1

# Copy the ISO file to the USB drive:
mount -t vfat /dev/sdb1 /mnt
cd ..
7z x ubuntu-16.04.2-desktop-amd64-custom.iso -o/mnt/
umount /mnt
